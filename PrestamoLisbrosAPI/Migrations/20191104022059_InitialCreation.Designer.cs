// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrestamoLisbrosAPI.Models;

namespace PrestamoLisbrosAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191104022059_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrestamoLisbrosAPI.Models.Autor", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nacionalidad");

                    b.Property<string>("Nombre");

                    b.HasKey("IdAutor");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("PrestamoLisbrosAPI.Models.Estudiante", b =>
                {
                    b.Property<int>("IdLector")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CI");

                    b.Property<string>("Carrera");

                    b.Property<string>("Dierccion");

                    b.Property<int>("Edad");

                    b.Property<string>("Nombre");

                    b.HasKey("IdLector");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("PrestamoLisbrosAPI.Models.LibAut", b =>
                {
                    b.Property<int>("IdAutor");

                    b.Property<int>("IdLibro");

                    b.HasKey("IdAutor", "IdLibro");

                    b.HasIndex("IdLibro");

                    b.ToTable("LibAut");
                });

            modelBuilder.Entity("PrestamoLisbrosAPI.Models.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<string>("Editorial");

                    b.Property<string>("Titulo");

                    b.HasKey("IdLibro");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("PrestamoLisbrosAPI.Models.Prestamo", b =>
                {
                    b.Property<int>("IdLector");

                    b.Property<int>("IdLibro");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("Date");

                    b.Property<bool>("Devuelto");

                    b.Property<DateTime>("FechaDevolucion");

                    b.HasKey("IdLector", "IdLibro", "FechaPrestamo");

                    b.HasIndex("IdLibro");

                    b.ToTable("Prestamo");
                });

            modelBuilder.Entity("PrestamoLisbrosAPI.Models.LibAut", b =>
                {
                    b.HasOne("PrestamoLisbrosAPI.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("IdAutor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PrestamoLisbrosAPI.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IdLibro")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PrestamoLisbrosAPI.Models.Prestamo", b =>
                {
                    b.HasOne("PrestamoLisbrosAPI.Models.Estudiante", "Lector")
                        .WithMany()
                        .HasForeignKey("IdLector")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PrestamoLisbrosAPI.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IdLibro")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
